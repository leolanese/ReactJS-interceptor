{
  "version": 3,
  "sources": ["../../preact-custom-element/src/index.js"],
  "sourcesContent": ["import { h, cloneElement, render, hydrate } from 'preact';\n\nexport default function register(Component, tagName, propNames, options) {\n\tfunction PreactElement() {\n\t\tconst inst = Reflect.construct(HTMLElement, [], PreactElement);\n\t\tinst._vdomComponent = Component;\n\t\tinst._root =\n\t\t\toptions && options.shadow ? inst.attachShadow({ mode: 'open' }) : inst;\n\t\treturn inst;\n\t}\n\tPreactElement.prototype = Object.create(HTMLElement.prototype);\n\tPreactElement.prototype.constructor = PreactElement;\n\tPreactElement.prototype.connectedCallback = connectedCallback;\n\tPreactElement.prototype.attributeChangedCallback = attributeChangedCallback;\n\tPreactElement.prototype.disconnectedCallback = disconnectedCallback;\n\n\tpropNames =\n\t\tpropNames ||\n\t\tComponent.observedAttributes ||\n\t\tObject.keys(Component.propTypes || {});\n\tPreactElement.observedAttributes = propNames;\n\n\t// Keep DOM properties and Preact props in sync\n\tpropNames.forEach((name) => {\n\t\tObject.defineProperty(PreactElement.prototype, name, {\n\t\t\tget() {\n\t\t\t\treturn this._vdom.props[name];\n\t\t\t},\n\t\t\tset(v) {\n\t\t\t\tif (this._vdom) {\n\t\t\t\t\tthis.attributeChangedCallback(name, null, v);\n\t\t\t\t} else {\n\t\t\t\t\tif (!this._props) this._props = {};\n\t\t\t\t\tthis._props[name] = v;\n\t\t\t\t\tthis.connectedCallback();\n\t\t\t\t}\n\n\t\t\t\t// Reflect property changes to attributes if the value is a primitive\n\t\t\t\tconst type = typeof v;\n\t\t\t\tif (\n\t\t\t\t\tv == null ||\n\t\t\t\t\ttype === 'string' ||\n\t\t\t\t\ttype === 'boolean' ||\n\t\t\t\t\ttype === 'number'\n\t\t\t\t) {\n\t\t\t\t\tthis.setAttribute(name, v);\n\t\t\t\t}\n\t\t\t},\n\t\t});\n\t});\n\n\treturn customElements.define(\n\t\ttagName || Component.tagName || Component.displayName || Component.name,\n\t\tPreactElement\n\t);\n}\n\nfunction ContextProvider(props) {\n\tthis.getChildContext = () => props.context;\n\t// eslint-disable-next-line no-unused-vars\n\tconst { context, children, ...rest } = props;\n\treturn cloneElement(children, rest);\n}\n\nfunction connectedCallback() {\n\t// Obtain a reference to the previous context by pinging the nearest\n\t// higher up node that was rendered with Preact. If one Preact component\n\t// higher up receives our ping, it will set the `detail` property of\n\t// our custom event. This works because events are dispatched\n\t// synchronously.\n\tconst event = new CustomEvent('_preact', {\n\t\tdetail: {},\n\t\tbubbles: true,\n\t\tcancelable: true,\n\t});\n\tthis.dispatchEvent(event);\n\tconst context = event.detail.context;\n\n\tthis._vdom = h(\n\t\tContextProvider,\n\t\t{ ...this._props, context },\n\t\ttoVdom(this, this._vdomComponent)\n\t);\n\t(this.hasAttribute('hydrate') ? hydrate : render)(this._vdom, this._root);\n}\n\nfunction toCamelCase(str) {\n\treturn str.replace(/-(\\w)/g, (_, c) => (c ? c.toUpperCase() : ''));\n}\n\nfunction attributeChangedCallback(name, oldValue, newValue) {\n\tif (!this._vdom) return;\n\t// Attributes use `null` as an empty value whereas `undefined` is more\n\t// common in pure JS components, especially with default parameters.\n\t// When calling `node.removeAttribute()` we'll receive `null` as the new\n\t// value. See issue #50.\n\tnewValue = newValue == null ? undefined : newValue;\n\tconst props = {};\n\tprops[name] = newValue;\n\tprops[toCamelCase(name)] = newValue;\n\tthis._vdom = cloneElement(this._vdom, props);\n\trender(this._vdom, this._root);\n}\n\nfunction disconnectedCallback() {\n\trender((this._vdom = null), this._root);\n}\n\n/**\n * Pass an event listener to each `<slot>` that \"forwards\" the current\n * context value to the rendered child. The child will trigger a custom\n * event, where will add the context value to. Because events work\n * synchronously, the child can immediately pull of the value right\n * after having fired the event.\n */\nfunction Slot(props, context) {\n\tconst ref = (r) => {\n\t\tif (!r) {\n\t\t\tthis.ref.removeEventListener('_preact', this._listener);\n\t\t} else {\n\t\t\tthis.ref = r;\n\t\t\tif (!this._listener) {\n\t\t\t\tthis._listener = (event) => {\n\t\t\t\t\tevent.stopPropagation();\n\t\t\t\t\tevent.detail.context = context;\n\t\t\t\t};\n\t\t\t\tr.addEventListener('_preact', this._listener);\n\t\t\t}\n\t\t}\n\t};\n\treturn h('slot', { ...props, ref });\n}\n\nfunction toVdom(element, nodeName) {\n\tif (element.nodeType === 3) return element.data;\n\tif (element.nodeType !== 1) return null;\n\tlet children = [],\n\t\tprops = {},\n\t\ti = 0,\n\t\ta = element.attributes,\n\t\tcn = element.childNodes;\n\tfor (i = a.length; i--; ) {\n\t\tif (a[i].name !== 'slot') {\n\t\t\tprops[a[i].name] = a[i].value;\n\t\t\tprops[toCamelCase(a[i].name)] = a[i].value;\n\t\t}\n\t}\n\n\tfor (i = cn.length; i--; ) {\n\t\tconst vnode = toVdom(cn[i], null);\n\t\t// Move slots correctly\n\t\tconst name = cn[i].slot;\n\t\tif (name) {\n\t\t\tprops[name] = h(Slot, { name }, vnode);\n\t\t} else {\n\t\t\tchildren[i] = vnode;\n\t\t}\n\t}\n\n\t// Only wrap the topmost node with a slot\n\tconst wrappedChildren = nodeName ? h(Slot, null, children) : children;\n\treturn h(nodeName || element.nodeName.toLowerCase(), props, wrappedChildren);\n}\n"],
  "mappings": "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",
  "names": ["ContextProvider", "props", "this", "getChildContext", "context", "children", "rest", "cloneElement", "connectedCallback", "event", "CustomEvent", "detail", "bubbles", "cancelable", "dispatchEvent", "_vdom", "h", "_props", "toVdom", "element", "nodeName", "nodeType", "data", "i", "a", "attributes", "cn", "childNodes", "length", "name", "value", "toCamelCase", "vnode", "slot", "Slot", "wrappedChildren", "toLowerCase", "_vdomComponent", "hasAttribute", "hydrate", "render", "_root", "str", "replace", "_", "c", "toUpperCase", "attributeChangedCallback", "oldValue", "newValue", "disconnectedCallback", "ref", "r", "_this", "_listener", "stopPropagation", "addEventListener", "removeEventListener", "Component", "tagName", "propNames", "options", "PreactElement", "inst", "Reflect", "construct", "HTMLElement", "shadow", "attachShadow", "mode", "prototype", "Object", "create", "constructor", "observedAttributes", "keys", "propTypes", "forEach", "defineProperty", "get", "set", "v", "type", "setAttribute", "customElements", "define", "displayName"]
}
